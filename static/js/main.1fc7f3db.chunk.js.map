{"version":3,"sources":["static-data.js","components/Empty/empty.js","components/Header/Header.js","components/Chats/Chats.js","reducers/contacts.js","actions/constants/action-type.js","reducers/index.js","reducers/user.js","reducers/activeUserId.js","reducers/messages.js","reducers/typing.js","store/index.js","actions/index.js","containers/MessageInput/MessageInput.js","containers/ChatWindow/ChatWindow.js","components/Main/main.js","containers/User/user.js","components/Sidebar/sidebar.js","index.js"],"names":["numberOfUsers","Empty","_ref","user","name","profile_pic","status","first_name","split","react_default","a","createElement","className","src","alt","Header","Chat","message","text","is_user_msg","concat","Chats","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottom","chatsRef","current","scrollTop","scrollHeight","React","createRef","ref","messages","map","Chats_Chat","key","number","Component","shortid","require","txtgen","faker","_","users","Array","from","length","generateUser","contacts","mapKeys","getMessages","messagesPerUser","forEach","numberOfMsgs","user_id","objectSpread","v","i","sentence","random","boolean","findName","email","internet","avatar","generate","SET_ACTIVE_USER_ID","SET_TYPING_VALUE","SEND_MESSAGE","combineReducers","state","arguments","undefined","activeUserId","action","type","payload","_action$payload","userId","allUserMsgs","keys","pop","defineProperty","typing","store","createStore","reducer","setActiveUserId","id","MessageInput","value","getState","onSubmit","e","preventDefault","dispatch","onChange","target","placeholder","ChatWindow","activeUser","activeMsgs","components_Header_Header","components_Chats_Chats","values","containers_MessageInput_MessageInput","Main","mainRef","containers_ChatWindow_ChatWindow","Empty_empty","renderMainContent","User","onClick","handleUserClick","bind","_ref2","Sidebar","contact","containers_User_user","App","_store$getState","Sidebar_sidebar","Main_main","render","console","log","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.1fc7f3db.chunk.js","sourcesContent":["const shortid = require(\"shortid\"); // shortid.generate() returns a unique \"short\" id\nconst txtgen = require(\"txtgen\"); // txtgen.sentence() returns random \"readable\" sentences\nconst faker = require(\"faker\"); // faker is used for generating random fake data.\nconst _ = require(\"lodash\"); // lodash is a utility lib for Javascript\n\nconst users = generateUsers(10);\nexport const contacts = _.mapKeys(users, \"user_id\");\nexport const getMessages = messagesPerUser => {\n  let messages = {};\n  _.forEach(users, user => {\n    messages[user.user_id] = {\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\")\n    };\n  });\n  return messages;\n};\n\n// just an example of how the state object is structured\nexport const state = {\n  user: generateUser(),\n  messages: getMessages(10),\n  typing: \"\",\n  contacts,\n  activeUserId: null\n};\n\n/**\n * @returns {Object} - a new user object\n */\nexport function generateUser() {\n  return {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    profile_pic: faker.internet.avatar(),\n    status: txtgen.sentence(),\n    user_id: shortid.generate()\n  };\n}\n/**\n * @returns {Object} - a new message object\n */\nfunction generateMsg(number) {\n  return {\n    number,\n    text: txtgen.sentence(),\n    is_user_msg: faker.random.boolean()\n  };\n}\n/**\n *\n * @param {Number} numberOfUsers - the number of users to be generated\n * @param {Function} generateUser - function that generates a single user\n * @returns {Array} - an array of user objects with length n = numberOfUsers\n */\nfunction generateUsers(numberOfUsers) {\n  return Array.from({ length: numberOfUsers }, () => generateUser());\n}\n\nfunction generateMsgs(numberOfMsgs) {\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\n}\n","import React from \"react\";\r\nimport \"./empty.css\"\r\n\r\nconst Empty = ({user})=>{\r\n  const {name, profile_pic, status} = user;\r\n  const first_name = name.split(\" \")[0];\r\n\r\n  return (\r\n    <div className=\"Empty\">\r\n      <h1 className=\"Empty__name\">Welcome, {first_name} </h1>\r\n      <img src={profile_pic} alt={name} className=\"Empty__img\" />\r\n      <p className=\"Empty__status\">\r\n        <b>Status:</b> {status}\r\n      </p>\r\n      <button className=\"Empty__btn\">Start a conversation</button>\r\n      <p className=\"Empty__info\">\r\n        Search for someone to start chatting with or go to Contacts to see who\r\n        is available\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({user})=>{\r\n  const {name,status} = user;\r\n  return (\r\n    <header className=\"Header\">\r\n     <h1 className=\"Header__name\">{name}</h1>\r\n     <p className=\"Header__status\">{status}</p>\r\n   </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"./Chats.css\";\r\n\r\nconst Chat = ({message})=>{\r\n  const {text, is_user_msg} = message;\r\n  return (<span className={`Chat ${is_user_msg ? \"is-user-msg\" : \"\"}`}>{text}\r\n  </span>);\r\n}\r\n\r\nclass Chats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chatsRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  scrollToBottom = () => {\r\n    this.chatsRef.current.scrollTop = this.chatsRef.current.scrollHeight;\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"Chats\" ref={this.chatsRef}>\r\n        {this.props.messages.map(message=>{\r\n          return <Chat message={message} key={message.number} />\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chats;\r\n","import { contacts } from \"../static-data\";\n\nexport default (state = contacts, action) => {\n  return state;\n};\n\n\n//Запомни как ты здесь тупил\n// {contacts} устанавливает state целиком, но мы специализировали наш\n//редусер и пожтому кормим его ключом обьекта \n","export const SET_ACTIVE_USER_ID = \"SET_ACTIVE_USER_ID\";\r\nexport const SET_TYPING_VALUE = \"SET_TYPING_VALUE\";\r\nexport const SEND_MESSAGE=\"SEND_MESSAGE\"\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user\";\r\nimport contacts from \"./contacts\";\r\nimport activeUserId from \"./activeUserId\"\r\nimport messages from \"./messages\"\r\nimport typing from \"./typing\"\r\n\r\nexport default combineReducers({\r\n  user,\r\n  contacts,\r\n  activeUserId,\r\n  messages,\r\n  typing\r\n});\r\n","import { generateUser } from \"../static-data\";\n\nexport default function user(state = generateUser(), action) {\n  return state;\n}\n","import {SET_ACTIVE_USER_ID} from \"../actions/constants/action-type\"\r\n\r\nexport default function activeUserId(state = null, action) {\r\n  switch(action.type){\r\n    case SET_ACTIVE_USER_ID:\r\n      return action.payload;\r\n    default:\r\n    return state;\r\n  }\r\n  return state;\r\n}\r\n","import {getMessages} from \"../static-data\";\r\nimport { SEND_MESSAGE } from \"../actions/constants/action-type\";\r\nimport _ from 'lodash';\r\n\r\nexport default function messages (state = getMessages(10), action){\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const {message, userId} = action.payload;\r\n      const allUserMsgs = state[userId];\r\n      const number =+_.keys(allUserMsgs).pop()+1;\r\n\r\n      return {\r\n        ...state,\r\n        [userId]: {\r\n          ...allUserMsgs,\r\n          [number]:{\r\n            number,\r\n            text: message,\r\n            is_user_msg: true\r\n          }\r\n\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {SET_TYPING_VALUE,\r\n        SEND_MESSAGE} from \"../actions/constants/action-type\"\r\n\r\nexport default function typing(state=\"\",action){\r\n  switch (action.type) {\r\n    case SET_TYPING_VALUE:\r\n        return action.payload;\r\n    case SEND_MESSAGE:\r\n        return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\nimport reducer from \"../reducers/index\";\n\nconst store = createStore(reducer);\n\nexport default store;\n","import {\r\n  SET_ACTIVE_USER_ID,\r\n  SET_TYPING_VALUE,\r\n  SEND_MESSAGE\r\n} from \"./constants/action-type\";\r\n\r\nexport const setActiveUserId = id =>({\r\n  type: SET_ACTIVE_USER_ID,\r\n  payload: id\r\n})\r\n\r\nexport const setTypingValue = value=>(\r\n  {\r\n    type:SET_TYPING_VALUE,\r\n    payload:value\r\n  }\r\n)\r\n\r\nexport const sendMessage = (message, userId)=>(\r\n  {\r\n    type:SEND_MESSAGE,\r\n    payload:{\r\n      message,\r\n      userId\r\n    }\r\n  }\r\n)\r\n","import React from \"react\";\r\nimport store from \"../../store\";\r\nimport { setTypingValue, sendMessage } from \"../../actions\";\r\nimport \"./MessageInput.css\";\r\n\r\n\r\nconst MessageInput = ({value}) =>{\r\n  const state = store.getState();\r\n\r\n  const handleSubmit = e=>{\r\n    e.preventDefault();\r\n    const { typing, activeUserId } = state;\r\n    store.dispatch(sendMessage(typing, activeUserId));\r\n  }\r\n\r\n  const handleChange = e=>{\r\n    store.dispatch(setTypingValue(e.target.value))\r\n  }\r\n\r\n  return(\r\n    <form className=\"Message\" onSubmit={handleSubmit}>\r\n    <input  className=\"Message__input\"\r\n            onChange={handleChange}\r\n            value={value}\r\n            placeholder=\"write a message\"\r\n          />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MessageInput;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Chats from \"../../components/Chats/Chats\";\r\nimport store from \"../../store/\";\r\nimport _ from \"lodash\";\r\nimport MessageInput from \"../MessageInput/MessageInput\"\r\n\r\nconst ChatWindow = ({activeUserId})=>{\r\n  const state = store.getState();\r\n  const { typing } = state;\r\n  const activeUser = state.contacts[activeUserId];\r\n  const activeMsgs = state.messages[activeUserId];\r\n\r\n  return (\r\n    <div className=\"ChatWindow\">\r\n      <Header user={activeUser} />\r\n      <Chats messages={_.values(activeMsgs)} />\r\n      <MessageInput value={typing}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React from \"react\";\nimport \"./main.css\";\nimport Empty from \"../Empty/empty\";\nimport ChatWindow from \"../../containers/ChatWindow/ChatWindow\"\n\n\nclass Main extends React.Component{\n  constructor(props){\n    super(props);\n    this.mainRef= React.createRef()\n  }\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n  scrollToBottom = () => {\n    this.mainRef.current.scrollTop = this.mainRef.current.scrollHeight;\n  }\n\n  renderMainContent(){\n    if (!this.props.activeUserId){\n      return <Empty user={this.props.user} activeUserId={this.props.activeUserId} />\n    }else {\n      return <ChatWindow activeUserId={this.props.activeUserId}/>\n    }\n  }\n  render(){\n    return(\n      <main className=\"Main\" ref={this.mainRef}>{this.renderMainContent()}</main>\n    )\n  }\n\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./user.css\";\nimport  {setActiveUserId} from \"../../actions\";\nimport store from \"../../store\"\n\nconst User = ({ user }) => {\n  const { name, profile_pic, status } = user;\n\n  return (\n    <div onClick={handleUserClick.bind(null, user)}  className=\"User\">\n      <img src={profile_pic} alt={name} className=\"User_pic\" />\n      <div className=\"User_details\">\n        <p className=\"User_details-name\">{name}</p>\n        <p className=\"User_details-status\">{status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n\nfunction handleUserClick({user_id}){\n  store.dispatch(setActiveUserId(user_id))\n}\n","import React from \"react\";\nimport \"./sidebar.css\";\nimport User from \"../../containers/User/user\";\n\nconst Sidebar = ({ contacts }) => {\n  return (\n    <aside className=\"Sidebar\">\n      {contacts.map(contact => {\n        return <User user={contact} key={contact.user_id} />;\n      })}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./components/Main/main\";\nimport Sidebar from \"./components/Sidebar/sidebar\";\nimport \"./styles.css\";\nimport _ from \"lodash\";\n\nimport store from \"./store/\";\n\nfunction App() {\n  const { contacts, user, activeUserId } = store.getState();\n  return (\n    <div className=\"App\">\n      <Sidebar contacts={_.values(contacts)} />\n      <Main user={user} activeUserId={activeUserId}/>\n    </div>\n  );\n}\n\nfunction fancyLog() {\n  console.log(\"%c Rendered with 👉 👉👇\", \"background: purple; color: #FFF\");\n  console.log(store.getState());\n}\n\nconst render = () => {\n  fancyLog();\n  return ReactDOM.render(<App />, document.getElementById(\"root\"));\n};\n\nrender();\n\nstore.subscribe(render);\n"],"sourceRoot":""}